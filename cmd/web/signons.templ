package web

import(
	s "pc-beantragung/internal/domain/signon"
)

templ SignOnList(activeFilter Filter, signons []s.SignOn) {
	<div class="space-y-8 mb-4">
		<form action="/signon/import-file" method="post" enctype="multipart/form-data">
		  <input
			type="file"
			name="signons"
			class="text-gray-500 font-medium text-sm bg-gray-100 file:cursor-pointer cursor-pointer file:border-0 file:py-2 file:px-4 file:mr-4 file:bg-gray-800 file:hover:bg-gray-700 file:text-white rounded"
			onchange="this.form.submit()"
		  />
		</form>
	</div>

	<div class="text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700">
		<ul class="flex flex-wrap -mb-px">
			@tabHeaderItem("In Beabeitung", "/signon?filter[state]=" + s.StateProcessing.String(), activeFilter.has(s.StateProcessing))
			@tabHeaderItem("Übergeben", "/signon?filter[state]=" + s.StateHandOver.String(), activeFilter.has(s.StateHandOver))
			@tabHeaderItem("Erledigt", "/signon?filter[state]=" + s.StateDone.String(), activeFilter.has(s.StateDone))
			@tabHeaderItem("Alle", "/signon", activeFilter.Active == false)
		</ul>
	</div>

	<div class="text-sm relative flex flex-col w-full h-full overflow-scroll text-gray-700 bg-white shadow-md rounded-xl bg-clip-border">
		<table class="w-full text-left table-auto min-w-max">
			<thead>
			<tr>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50"></th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Id</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Firma / Vorname / Nachname</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Plz</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Stadt</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Strasse</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Hausnr</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Lieferbeginn</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Zaehler Nr</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Malo</th>
				<th class="p-4 border-b border-blue-gray-100 bg-blue-gray-50">Melo</th>
			</tr>
			</thead>
			<tbody>
			for _, so := range signons {
				@SignOnListRow(&so, false, false)
			}
			</tbody>
		</table>
	</div>
}

templ SignOnListRow(so *s.SignOn, active bool, swapOob bool) {
	if swapOob {
		@templ.Raw("<template>")
	}
	<tr id={"signon-row-" + ToString(so.Id)}
		if active {
			class="bg-red-200"
		}
		if swapOob {
			hx-swap-oob="true"
		}
	>
		<td
			class="p-4 border-b border-r border-blue-gray-50 cursor-pointer"
			hx-get={"/signon/sidebar/" + ToString(so.Id)}
			hx-target="#sidebar"
		>
			<svg width="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" >
			 <path d="M3 7.8C3 6.11984 3 5.27976 3.32698 4.63803C3.6146 4.07354 4.07354 3.6146 4.63803 3.32698C5.27976 3 6.11984 3 7.8 3H16.2C17.8802 3 18.7202 3 19.362 3.32698C19.9265 3.6146 20.3854 4.07354 20.673 4.63803C21 5.27976 21 6.11984 21 7.8V13.5C21 14.8978 21 15.5967 20.7716 16.1481C20.4672 16.8831 19.8831 17.4672 19.1481 17.7716C18.5967 18 17.8978 18 16.5 18C16.0114 18 15.7671 18 15.5405 18.0535C15.2383 18.1248 14.9569 18.2656 14.7185 18.4645C14.5397 18.6137 14.3931 18.8091 14.1 19.2L12.64 21.1467C12.4229 21.4362 12.3143 21.5809 12.1812 21.6327C12.0647 21.678 11.9353 21.678 11.8188 21.6327C11.6857 21.5809 11.5771 21.4362 11.36 21.1467L9.9 19.2C9.60685 18.8091 9.46028 18.6137 9.2815 18.4645C9.04312 18.2656 8.76169 18.1248 8.45951 18.0535C8.23287 18 7.98858 18 7.5 18C6.10218 18 5.40326 18 4.85195 17.7716C4.11687 17.4672 3.53284 16.8831 3.22836 16.1481C3 15.5967 3 14.8978 3 13.5V7.8Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
			 <path fill-rule="evenodd" clip-rule="evenodd" d="M11.9973 8.33059C11.1975 7.4216 9.8639 7.17708 8.86188 8.00945C7.85986 8.84182 7.71879 10.2335 8.50568 11.2179C8.97361 11.8033 10.1197 12.8531 10.9719 13.6079C11.3237 13.9195 11.4996 14.0753 11.7114 14.1385C11.8925 14.1926 12.102 14.1926 12.2832 14.1385C12.4949 14.0753 12.6708 13.9195 13.0226 13.6079C13.8748 12.8531 15.0209 11.8033 15.4888 11.2179C16.2757 10.2335 16.1519 8.83306 15.1326 8.00945C14.1134 7.18584 12.797 7.4216 11.9973 8.33059Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
			</svg>
		</td>
		<td class="p-4 border-b border-blue-gray-50">{ ToString(so.IdPc) }</td>
		<td class="p-4 border-b border-blue-gray-50">
			{ NullStringToString(so.Company) } { NullStringToString(so.Firstname) } { NullStringToString(so.Lastname) }
		</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.Zip) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.City) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.Street) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.HouseNo) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.DesiredDeliveryStart) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.MeterNo ) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.Malo) }</td>
		<td class="p-4 border-b border-blue-gray-50">{ NullStringToString(so.Melo) }</td>
	</tr>
	if swapOob {
		@templ.Raw("</template>")
	}
}

templ tabHeaderItem(name string, url string, active bool) {
	<li class="me-2 cursor-pointer">
		<a hx-get={url} hx-target="main"
			if active {
				class="inline-block p-4 text-blue-600 border-t-2 border-blue-600 rounded-t-lg active dark:text-blue-500 dark:border-blue-500"
			} else {
				class="inline-block p-4 border-t-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300"
			}
		>{ name }</a>
	</li>

	<!-- Disabled -->
	<!-- class="inline-block p-4 text-gray-400 rounded-t-lg cursor-not-allowed dark:text-gray-500" -1-> -->
}

templ Sidebar(signon *s.SignOn) {
<div class="fixed top-0 right-0 z-40 w-[40%] h-screen">
	<div class="h-full px-10 py-10 overflow-y-auto bg-gray-50 dark:bg-gray-800">
		<div class="w-8 -m-10 cursor-pointer"
			hx-delete={"/signon/sidebar/" + ToString(signon.Id) }
			hx-trigger="click"
			hx-target="#sidebar"
			>
			<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
				<g>
				<path d="M3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z" stroke="#000000" stroke-width="2"></path>
				<path d="M9 9L15 15M15 9L9 15" stroke="#000000" stroke-width="2" stroke-linecap="round"></path>
				</g>
			</svg>
		</div>

		<div class="mt-20">

		</div>

		<form class="mx-auto">
			<div class="relative max-w-lg flex w-full flex-col rounded-md bg-white shadow mb-5">
				<nav class="flex min-w-[500px] flex-row gap-1 p-2">
					<div role="button" class="flex w-full items-center rounded-lg p-0 transition-all hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100" >
					  <label class="flex w-full cursor-pointer items-center px-3 py-2" >
						<div class="inline-flex items-center">
						  <label class="relative flex items-center cursor-pointer">
						  <input
								value={ s.StateProcessing.String() }
								name="state"
								type="radio"
								class="peer h-5 w-5 cursor-pointer appearance-none rounded-full border border-slate-300 checked:border-slate-400 transition-all"
								if signon.MyState == s.StateProcessing {
									checked
								}
						  />
							<span class="absolute bg-slate-800 w-3 h-3 rounded-full opacity-0 peer-checked:opacity-100 transition-opacity duration-200 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"></span>
						  </label>
						  <label class="ml-2 text-slate-600 cursor-pointer text-sm"> In Bearbeitung </label>
						</div>
					  </label>
					</div>
					<div role="button" class="flex w-full items-center rounded-lg p-0 transition-all hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100" >
					  <label class="flex w-full cursor-pointer items-center px-3 py-2">
						<div class="inline-flex items-center">
						  <label class="relative flex items-center cursor-pointer">
							<input
							value={ s.StateHandOver.String() }
							name="state"
							type="radio"
							class="peer h-5 w-5 cursor-pointer appearance-none rounded-full border border-slate-300 checked:border-slate-400 transition-all"
							if signon.MyState == s.StateHandOver {
								checked
							}
							/>
							<span class="absolute bg-slate-800 w-3 h-3 rounded-full opacity-0 peer-checked:opacity-100 transition-opacity duration-200 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"></span>
						  </label>
						  <label class="ml-2 text-slate-600 cursor-pointer text-sm"> Übergeben </label>
						</div>
					  </label>
					</div>
					<div role="button" class="flex w-full items-center rounded-lg p-0 transition-all hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100" >
					  <label class="flex w-full cursor-pointer items-center px-3 py-2">
						<div class="inline-flex items-center">
						  <label class="relative flex items-center cursor-pointer">
							<input
							value={ s.StateDone.String() }
							name="state"
							type="radio"
							class="peer h-5 w-5 cursor-pointer appearance-none rounded-full border border-slate-300 checked:border-slate-400 transition-all"
							if signon.MyState == s.StateDone {
								checked
							}
							/>
							<span class="absolute bg-slate-800 w-3 h-3 rounded-full opacity-0 peer-checked:opacity-100 transition-opacity duration-200 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"></span>
						  </label>
						  <label class="ml-2 text-slate-600 cursor-pointer text-sm"> Erledigt </label>
						</div>
					  </label>
					</div>
				</nav>
			</div>

			<div class="relative z-0 w-full mb-5 group">
				<label for="comment" class="block mb-2 text-sm font-medium text-gray-500 dark:text-white">Kommentar</label>
				<textarea
					name="comment"
					id="comment"
					rows="8"
					class="block p-2.5 w-full text-sm text-gray-500 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
				>
				{ signon.MyComment }
				</textarea>
			</div>
			<button
				type="submit"
				hx-put={"/signon/" + ToString(signon.Id)}
				hx-target="#sidebar"
				class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
				>
				Speichern
			</button>
		</form>
	</div>
</div>
}

templ RemovedTr(id int) {
	<tr id={"signon-row-" + ToString(id)} hx-swap-oob="delete"></tr>
}
